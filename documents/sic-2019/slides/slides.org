# -*- org-export-babel-evaluate: nil -*-
# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer

#+beamer_header: \title[Task-Based Parallel Applications]{Computational Experiments on Task-Based Parallel Applications}
#+subtitle: /Salão de Iniciação Científica UFRGS 2019/
#+beamer_header: \author[Henrique Silva \& Lucas Schnorr]{Henrique Corrêa Pereira da Silva\\Lucas Mello Schnorr (advisor)}
#+email: hcpsilva@inf.ufrgs.br, schnorr@inf.ufrgs.br
#+beamer_header: \institute{Institute of Informatics}
#+date:

#+latex_class: beamer
#+latex_class_options: [serif,11pt]
#+beamer_theme: UiB
#+options: author:t title:nil H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+language: pt-br
#+tags: noexport(n) ignore(i)
#+export_exclude_tags: noexport
#+export_select_tags: export
#+latex_header: \usepackage{microtype}
#+latex_header: \usepackage{mathtools}
#+latex_header: \usepackage{palatino}
#+latex_header: \usepackage{amssymb}
#+latex_header: \usepackage{csquotes}
#+latex_header: \usepackage{tikz}
#+latex_header: \usepackage[absolute, overlay]{textpos}
#+latex_header: \setlength{\TPHorizModule}{\paperwidth} % Textpos units
#+latex_header: \setlength{\TPVertModule}{\paperwidth} % Textpos units
#+latex_header: \usetikzlibrary{overlay-beamer-styles}  % Overlay effects for TikZ

* Preamble                                                  :B_ignoreheading:
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:
*** Context

In the last few years, we saw the continuation of a decades long trend in
computing: ever-growing *parallelism*

\pause \vfill

Said trend followed suit in both *hardware* and *software* spheres

*** Tradition

Applications made use of, traditionally, multiple *homogeneous* hardware

\pause \vfill

In order to gain even more performance in their fields of application, the
hardware naturally specialized over time

\pause \vfill

While every gain is welcome, this made buying highly performant and specialized
systems considerably expensive

*** Reality

Thus, more common realities consisting of *heterogeneous* hardware became
notoriously hard to extract their full potential

\pause \vfill

Applications running on them can't rely on single hardware types if they seek
true /high performance/

\pause \vfill

Given this demand, considerable effort has been poured into the development of
/middleware/ capable of distributing applications workloads into these hybrid
systems

*** Agenda
:PROPERTIES:
:BEAMER_OPT: plain, noframenumbering
:END:

\tableofcontents

* Introduction
** Parallel programming models

*** Agenda
:PROPERTIES:
:BEAMER_OPT: plain, noframenumbering
:END:

\tableofcontents[currentsubsection, sectionstyle=show/shaded]

*** Most popular

There are several popular parallel programming models, be it on /HPC/ or not

\pause \vfill

Examples: \pause

- Message passing \pause
- Shared memory \pause
- Hybrid model

\vfill \pause

In any of those models, their implementation is a manual, complex,
time-consuming and, therefore, error-prone process

*** Implementations

Most popular implementations seek to alleviate the burden of programmers

\vfill \pause

Of those implementations the most popular are: \pause

- OpenMP
- OpenMPI
- OpenACC
- CUDA
etc...

\vfill \pause

And those do a excellent job, but they *can't* completely conform to
heterogeneous systems

*** Domain decomposition

When programming parallel solutions, one must, sooner or later, decompose the
problem domain

\vfill \pause

Utilizing the previously cited APIs, the domain decomposition is fixes to the
number of resources\pause /, even though you can utilize heterogeneous resources/

\vfill \pause

As you can't personalize each execution grain, your solution will be victim to
dynamic load imbalances

** Middleware

*** Agenda
:PROPERTIES:
:BEAMER_OPT: plain, noframenumbering
:END:

\tableofcontents[currentsubsection, sectionstyle=show/shaded]

*** StarPU

One of the efforts into creating a middleware capable of overcoming said
limitations is called *StarPU*

\vfill \pause

Its approach is by defining the problem by tasks, and those tasks into a
/Directed Acyclic Graph/ (or /DAG/ for short)

\vfill \pause

#+attr_latex: :width 5cm
[[./images/dag.png]]

*** Task-based

\vfill

#+attr_latex: :width 11cm
[[./images/simple_1.pdf]]

*** Task-based
:PROPERTIES:
:BEAMER_OPT:  noframenumbering
:END:

\vfill

#+attr_latex: :width 11cm
[[./images/simple_2.pdf]]

* Method

** Algorithm design

*** Agenda
:PROPERTIES:
:BEAMER_OPT: plain, noframenumbering
:END:

\tableofcontents[currentsubsection, sectionstyle=show/shaded]

*** Task-based

Placeholder

** Experiment design

*** Agenda
:PROPERTIES:
:BEAMER_OPT: plain, noframenumbering
:END:

\tableofcontents[currentsubsection, sectionstyle=show/shaded]

*** Fully factorial

Placeholder

*** Script

Placeholder

* Results

** Visualizations

** Conclusions

* Questions                                                 :B_ignoreheading:
:PROPERTIES:
:BEAMER_env: ignoreheading
:END:

\setbeamercolor{background canvas}{bg = uibgray}
\title{Questions?}

*** Thanks                                                    :B_fullframe:
:PROPERTIES:
:BEAMER_OPT: b, plain, noframenumbering
:BEAMER_env: fullframe
:END:

\titlepage
